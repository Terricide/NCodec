using System.Runtime.CompilerServices;
using IKVM.Attributes;
using java.lang;

namespace net.sourceforge.jaad.aac.sbr;

internal class NoiseEnvelope : Object, SBRConstants
{
	[Modifiers(Modifiers.Private | Modifiers.Static | Modifiers.Final)]
	private static float[] E_deq_tab;

	[Modifiers(Modifiers.Private | Modifiers.Static | Modifiers.Final)]
	private static float[] Q_div2_tab;

	[Modifiers(Modifiers.Private | Modifiers.Static | Modifiers.Final)]
	private static float[][] Q_div2_tab_left;

	[Modifiers(Modifiers.Private | Modifiers.Static | Modifiers.Final)]
	private static float[][] Q_div2_tab_right;

	[Modifiers(Modifiers.Private | Modifiers.Static | Modifiers.Final)]
	private static float[] Q_div_tab;

	[Modifiers(Modifiers.Private | Modifiers.Static | Modifiers.Final)]
	private static float[][] Q_div_tab_left;

	[Modifiers(Modifiers.Private | Modifiers.Static | Modifiers.Final)]
	private static float[][] Q_div_tab_right;

	[Modifiers(Modifiers.Private | Modifiers.Static | Modifiers.Final)]
	private static float[] E_pan_tab;

	[MethodImpl(MethodImplOptions.NoInlining)]
	[SpecialName]
	public static void ___003Cclinit_003E()
	{
	}

	[LineNumberTable(new byte[]
	{
		159,
		70,
		130,
		140,
		159,
		32,
		199,
		100,
		191,
		4,
		byte.MaxValue,
		4,
		70,
		127,
		1,
		167
	})]
	public static float calc_Q_div(SBR sbr, int ch, int m, int l)
	{
		if (sbr.bs_coupling)
		{
			if (sbr.Q[0][m][l] < 0 || sbr.Q[0][m][l] > 30 || sbr.Q[1][m][l] < 0 || sbr.Q[1][m][l] > 24)
			{
				return 0f;
			}
			if (ch == 0)
			{
				return Q_div_tab_left[sbr.Q[0][m][l]][sbr.Q[1][m][l] >> 1];
			}
			return Q_div_tab_right[sbr.Q[0][m][l]][sbr.Q[1][m][l] >> 1];
		}
		if (sbr.Q[ch][m][l] < 0 || sbr.Q[ch][m][l] > 30)
		{
			return 0f;
		}
		return Q_div_tab[sbr.Q[ch][m][l]];
	}

	[LineNumberTable(new byte[]
	{
		159,
		62,
		66,
		108,
		159,
		32,
		199,
		100,
		191,
		4,
		byte.MaxValue,
		4,
		70,
		127,
		1,
		167
	})]
	public static float calc_Q_div2(SBR sbr, int ch, int m, int l)
	{
		if (sbr.bs_coupling)
		{
			if (sbr.Q[0][m][l] < 0 || sbr.Q[0][m][l] > 30 || sbr.Q[1][m][l] < 0 || sbr.Q[1][m][l] > 24)
			{
				return 0f;
			}
			if (ch == 0)
			{
				return Q_div2_tab_left[sbr.Q[0][m][l]][sbr.Q[1][m][l] >> 1];
			}
			return Q_div2_tab_right[sbr.Q[0][m][l]][sbr.Q[1][m][l] >> 1];
		}
		if (sbr.Q[ch][m][l] < 0 || sbr.Q[ch][m][l] > 30)
		{
			return 0f;
		}
		return Q_div2_tab[sbr.Q[ch][m][l]];
	}

	[MethodImpl(MethodImplOptions.NoInlining)]
	[LineNumberTable(10)]
	internal NoiseEnvelope()
	{
	}

	[LineNumberTable(new byte[]
	{
		159, 92, 66, 113, 112, 122, 127, 9, 112, 238,
		61, 234, 73, 187, 113, 122, 100, 143, 145, 252,
		58, 234, 74, 183, 124, 113, 121, 100, 144, 146,
		254, 57, 44, 236, 77, 102, 183, 124, 113, 159,
		23, 100, 144, 146, 254, 56, 44, 236, 19, 234,
		125
	})]
	public static void extract_envelope_data(SBR sbr, int ch)
	{
		for (int l2 = 0; l2 < sbr.L_E[ch]; l2++)
		{
			if (sbr.bs_df_env[ch][l2] == 0)
			{
				for (int n = 1; n < sbr.n[sbr.f[ch][l2]]; n++)
				{
					sbr.E[ch][n][l2] = sbr.E[ch][n - 1][l2] + sbr.E[ch][n][l2];
					if (sbr.E[ch][n][l2] < 0)
					{
						sbr.E[ch][n][l2] = 0;
					}
				}
				continue;
			}
			int g = ((l2 != 0) ? sbr.f[ch][l2 - 1] : sbr.f_prev[ch]);
			if (sbr.f[ch][l2] == g)
			{
				for (int m = 0; m < sbr.n[sbr.f[ch][l2]]; m++)
				{
					int E_prev3 = ((l2 != 0) ? sbr.E[ch][m][l2 - 1] : sbr.E_prev[ch][m]);
					sbr.E[ch][m][l2] = E_prev3 + sbr.E[ch][m][l2];
				}
			}
			else if (g == 1 && sbr.f[ch][l2] == 0)
			{
				for (int l = 0; l < sbr.n[sbr.f[ch][l2]]; l++)
				{
					for (int j = 0; j < sbr.N_high; j++)
					{
						if (sbr.f_table_res[1][j] == sbr.f_table_res[0][l])
						{
							int E_prev2 = ((l2 != 0) ? sbr.E[ch][j][l2 - 1] : sbr.E_prev[ch][j]);
							sbr.E[ch][l][l2] = E_prev2 + sbr.E[ch][l][l2];
						}
					}
				}
			}
			else
			{
				if (g != 0 || sbr.f[ch][l2] != 1)
				{
					continue;
				}
				for (int k = 0; k < sbr.n[sbr.f[ch][l2]]; k++)
				{
					for (int i = 0; i < sbr.N_low; i++)
					{
						if (sbr.f_table_res[0][i] <= sbr.f_table_res[1][k] && sbr.f_table_res[1][k] < sbr.f_table_res[0][i + 1])
						{
							int E_prev = ((l2 != 0) ? sbr.E[ch][i][l2 - 1] : sbr.E_prev[ch][i]);
							sbr.E[ch][k][l2] = E_prev + sbr.E[ch][k][l2];
						}
					}
				}
			}
		}
	}

	[LineNumberTable(new byte[]
	{
		159, 76, 130, 113, 109, 111, 63, 9, 231, 69,
		100, 111, 63, 5, 231, 69, 108, 63, 9, 231,
		51, 234, 83
	})]
	public static void extract_noise_floor_data(SBR sbr, int ch)
	{
		for (int l = 0; l < sbr.L_Q[ch]; l++)
		{
			if (sbr.bs_df_noise[ch][l] == 0)
			{
				for (int k = 1; k < sbr.N_Q; k++)
				{
					sbr.Q[ch][k][l] = sbr.Q[ch][k][l] + sbr.Q[ch][k - 1][l];
				}
			}
			else if (l == 0)
			{
				for (int j = 0; j < sbr.N_Q; j++)
				{
					sbr.Q[ch][j][l] = sbr.Q_prev[ch][j] + sbr.Q[ch][j][0];
				}
			}
			else
			{
				for (int i = 0; i < sbr.N_Q; i++)
				{
					sbr.Q[ch][i][l] = sbr.Q[ch][i][l - 1] + sbr.Q[ch][i][l];
				}
			}
		}
	}

	[MethodImpl(MethodImplOptions.NoInlining)]
	[LineNumberTable(new byte[]
	{
		159,
		56,
		162,
		172,
		144,
		113,
		250,
		69,
		147,
		106,
		180,
		180,
		116,
		byte.MaxValue,
		1,
		49,
		42,
		234,
		86,
		110,
		110,
		120,
		24,
		41,
		234,
		71
	})]
	public static void dequantChannel(SBR sbr, int ch)
	{
		if (sbr.bs_coupling)
		{
			return;
		}
		int amp = ((!sbr.amp_res[ch]) ? 1 : 0);
		for (int k = 0; k < sbr.L_E[ch]; k++)
		{
			for (int j = 0; j < sbr.n[sbr.f[ch][k]]; j++)
			{
				int exp = sbr.E[ch][j][k] >> amp;
				if (exp < 0 || exp >= 64)
				{
					sbr.E_orig[ch][j][k] = 0f;
					continue;
				}
				sbr.E_orig[ch][j][k] = E_deq_tab[exp];
				if (amp != 0 && ((uint)sbr.E[ch][j][k] & (true ? 1u : 0u)) != 0)
				{
					sbr.E_orig[ch][j][k] = sbr.E_orig[ch][j][k] * 1.41421354f;
				}
			}
		}
		for (int k = 0; k < sbr.L_Q[ch]; k++)
		{
			for (int i = 0; i < sbr.N_Q; i++)
			{
				sbr.Q_div[ch][i][k] = calc_Q_div(sbr, ch, i, k);
				sbr.Q_div2[ch][i][k] = calc_Q_div2(sbr, ch, i, k);
			}
		}
	}

	[MethodImpl(MethodImplOptions.NoInlining)]
	[LineNumberTable(new byte[]
	{
		159, 42, 162, 112, 144, 113, 154, 246, 71, 148,
		151, 114, 183, 107, 116, 209, 121, 252, 40, 42,
		234, 94, 113, 113, 120, 120, 120, 248, 60, 44,
		234, 72
	})]
	public static void unmap(SBR sbr)
	{
		int amp0 = ((!sbr.amp_res[0]) ? 1 : 0);
		int amp1 = ((!sbr.amp_res[1]) ? 1 : 0);
		for (int k = 0; k < sbr.L_E[0]; k++)
		{
			for (int j = 0; j < sbr.n[sbr.f[0][k]]; j++)
			{
				int exp0 = (sbr.E[0][j][k] >> amp0) + 1;
				int exp1 = sbr.E[1][j][k] >> amp1;
				if (exp0 < 0 || exp0 >= 64 || exp1 < 0 || exp1 > 24)
				{
					sbr.E_orig[1][j][k] = 0f;
					sbr.E_orig[0][j][k] = 0f;
					continue;
				}
				float tmp = E_deq_tab[exp0];
				if (amp0 != 0 && ((uint)sbr.E[0][j][k] & (true ? 1u : 0u)) != 0)
				{
					tmp = (float)((double)tmp * 1.414213562);
				}
				sbr.E_orig[0][j][k] = tmp * E_pan_tab[exp1];
				sbr.E_orig[1][j][k] = tmp * E_pan_tab[24 - exp1];
			}
		}
		for (int k = 0; k < sbr.L_Q[0]; k++)
		{
			for (int i = 0; i < sbr.N_Q; i++)
			{
				sbr.Q_div[0][i][k] = calc_Q_div(sbr, 0, i, k);
				sbr.Q_div[1][i][k] = calc_Q_div(sbr, 1, i, k);
				sbr.Q_div2[0][i][k] = calc_Q_div2(sbr, 0, i, k);
				sbr.Q_div2[1][i][k] = calc_Q_div2(sbr, 1, i, k);
			}
		}
	}

	[LineNumberTable(new byte[]
	{
		159,
		139,
		66,
		byte.MaxValue,
		161,
		229,
		76,
		byte.MaxValue,
		160,
		188,
		82,
		byte.MaxValue,
		174,
		14,
		98,
		byte.MaxValue,
		174,
		14,
		98,
		byte.MaxValue,
		160,
		188,
		83,
		byte.MaxValue,
		174,
		14,
		98,
		byte.MaxValue,
		174,
		14,
		160,
		220
	})]
	static NoiseEnvelope()
	{
		E_deq_tab = new float[64]
		{
			64f, 128f, 256f, 512f, 1024f, 2048f, 4096f, 8192f, 16384f, 32768f,
			65536f, 131072f, 262144f, 524288f, 1048580f, 2097150f, 4194300f, 8388610f, 1.67772E+07f, 3.35544E+07f,
			6.71089E+07f, 1.34218E+08f, 2.68435E+08f, 5.36871E+08f, 1.07374E+09f, 2.14748E+09f, 4.29497E+09f, 8.58993E+09f, 1.71799E+10f, 3.43597E+10f,
			6.87195E+10f, 1.37439E+11f, 2.74878E+11f, 5.49756E+11f, 1.09951E+12f, 2.19902E+12f, 4.39805E+12f, 8.79609E+12f, 1.75922E+13f, 3.51844E+13f,
			7.03687E+13f, 1.40737E+14f, 2.81475E+14f, 5.6295E+14f, 1.1259E+15f, 2.2518E+15f, 4.5036E+15f, 9.0072E+15f, 1.80144E+16f, 3.60288E+16f,
			7.20576E+16f, 1.44115E+17f, 2.8823E+17f, 5.76461E+17f, 1.15292E+18f, 2.30584E+18f, 4.61169E+18f, 9.22337E+18f, 1.84467E+19f, 3.68935E+19f,
			7.3787E+19f, 1.47574E+20f, 2.95148E+20f, 5.90296E+20f
		};
		Q_div2_tab = new float[31]
		{
			0.984615f,
			32f / 33f,
			0.941176f,
			0.888889f,
			0.8f,
			0.666667f,
			0.5f,
			0.333333f,
			0.2f,
			0.111111f,
			0.0588235f,
			0.030303f,
			0.0153846f,
			0.00775194f,
			0.00389105f,
			0.00194932f,
			0.00097561f,
			0.000488043f,
			0.000244081f,
			0.000122055f,
			6.10314E-05f,
			3.05166E-05f,
			1.52586E-05f,
			7.62934E-06f,
			3.81468E-06f,
			1.90734E-06f,
			9.53673E-07f,
			4.76837E-07f,
			2.38419E-07f,
			1.19209E-07f,
			5.96046E-08f
		};
		Q_div2_tab_left = new float[31][]
		{
			new float[13]
			{
				0.0302959f, 0.111015f, 0.332468f, 0.663212f, 0.882759f, 0.962406f, 0.984615f, 0.990329f, 0.991768f, 0.992128f,
				0.992218f, 0.992241f, 0.992246f
			},
			new float[13]
			{
				0.0153809f,
				0.0587695f,
				0.199377f,
				0.496124f,
				0.790123f,
				0.927536f,
				32f / 33f,
				0.980843f,
				0.98367f,
				0.984379f,
				0.984556f,
				0.984601f,
				0.984612f
			},
			new float[13]
			{
				0.00775006f, 0.0302744f, 0.110727f, 0.329897f, 0.653061f, 0.864865f, 0.941176f, 0.962406f, 0.967864f, 0.969238f,
				0.969582f, 0.969668f, 0.96969f
			},
			new float[13]
			{
				0.0038901f, 0.0153698f, 0.0586081f, 0.197531f, 0.484848f, 0.761905f, 0.888889f, 0.927536f, 0.937729f, 0.940312f,
				0.94096f, 0.941122f, 0.941163f
			},
			new float[13]
			{
				0.00194884f, 0.00774443f, 0.0301887f, 0.109589f, 0.32f, 0.615385f, 0.8f, 0.864865f, 0.882759f, 0.887348f,
				0.888503f, 0.888792f, 0.888865f
			},
			new float[13]
			{
				0.000975372f, 0.00388727f, 0.0153257f, 0.057971f, 0.190476f, 0.444444f, 0.666667f, 0.761905f, 0.790123f, 0.797508f,
				0.799375f, 0.799844f, 0.799961f
			},
			new float[13]
			{
				0.000487924f, 0.00194742f, 0.00772201f, 0.0298507f, 0.105263f, 0.285714f, 0.5f, 0.615385f, 0.653061f, 0.663212f,
				0.6658f, 0.66645f, 0.666612f
			},
			new float[13]
			{
				0.000244021f, 0.000974659f, 0.00387597f, 0.0151515f, 0.0555556f, 0.166667f, 0.333333f, 0.444444f, 0.484848f, 0.496124f,
				0.499025f, 0.499756f, 0.499939f
			},
			new float[13]
			{
				0.000122026f, 0.000487567f, 0.00194175f, 0.00763359f, 0.0285714f, 0.0909091f, 0.2f, 0.285714f, 0.32f, 0.329897f,
				0.332468f, 0.333116f, 0.333279f
			},
			new float[13]
			{
				6.10165E-05f, 0.000243843f, 0.000971817f, 0.00383142f, 0.0144928f, 0.047619f, 0.111111f, 0.166667f, 0.190476f, 0.197531f,
				0.199377f, 0.199844f, 0.199961f
			},
			new float[13]
			{
				3.05092E-05f,
				0.000121936f,
				0.000486145f,
				0.00191939f,
				1f / 137f,
				0.0243902f,
				0.0588235f,
				0.0909091f,
				0.105263f,
				0.109589f,
				0.110727f,
				0.111015f,
				0.111087f
			},
			new float[13]
			{
				1.52548E-05f, 6.09719E-05f, 0.000243132f, 0.000960615f, 0.003663f, 0.0123457f, 0.030303f, 0.047619f, 0.0555556f, 0.057971f,
				0.0586081f, 0.0587695f, 0.05881f
			},
			new float[13]
			{
				7.62747E-06f, 3.04869E-05f, 0.000121581f, 0.000480538f, 0.00183486f, 0.00621118f, 0.0153846f, 0.0243902f, 0.0285714f, 0.0298507f,
				0.0301887f, 0.0302744f, 0.0302959f
			},
			new float[13]
			{
				3.81375E-06f, 1.52437E-05f, 6.0794E-05f, 0.000240327f, 0.000918274f, 0.00311526f, 0.00775194f, 0.0123457f, 0.0144928f, 0.0151515f,
				0.0153257f, 0.0153698f, 0.0153809f
			},
			new float[13]
			{
				1.90688E-06f,
				7.62189E-06f,
				3.03979E-05f,
				0.000120178f,
				0.000459348f,
				0.00156006f,
				0.00389105f,
				0.00621118f,
				1f / 137f,
				0.00763359f,
				0.00772201f,
				0.00774443f,
				0.00775006f
			},
			new float[13]
			{
				9.53441E-07f, 3.81096E-06f, 1.51992E-05f, 6.00925E-05f, 0.000229727f, 0.00078064f, 0.00194932f, 0.00311526f, 0.003663f, 0.00383142f,
				0.00387597f, 0.00388727f, 0.0038901f
			},
			new float[13]
			{
				4.76721E-07f, 1.90548E-06f, 7.59965E-06f, 3.00472E-05f, 0.000114877f, 0.000390472f, 0.00097561f, 0.00156006f, 0.00183486f, 0.00191939f,
				0.00194175f, 0.00194742f, 0.00194884f
			},
			new float[13]
			{
				2.3836E-07f, 9.52743E-07f, 3.79984E-06f, 1.50238E-05f, 5.74416E-05f, 0.000195274f, 0.000488043f, 0.00078064f, 0.000918274f, 0.000960615f,
				0.000971817f, 0.000974659f, 0.000975372f
			},
			new float[13]
			{
				1.1918E-07f, 4.76372E-07f, 1.89992E-06f, 7.51196E-06f, 2.87216E-05f, 9.76467E-05f, 0.000244081f, 0.000390472f, 0.000459348f, 0.000480538f,
				0.000486145f, 0.000487567f, 0.000487924f
			},
			new float[13]
			{
				5.95901E-08f, 2.38186E-07f, 9.49963E-07f, 3.756E-06f, 1.4361E-05f, 4.88257E-05f, 0.000122055f, 0.000195274f, 0.000229727f, 0.000240327f,
				0.000243132f, 0.000243843f, 0.000244021f
			},
			new float[13]
			{
				2.9795E-08f, 1.19093E-07f, 4.74982E-07f, 1.878E-06f, 7.18056E-06f, 2.44135E-05f, 6.10314E-05f, 9.76467E-05f, 0.000114877f, 0.000120178f,
				0.000121581f, 0.000121936f, 0.000122026f
			},
			new float[13]
			{
				1.48975E-08f, 5.95465E-08f, 2.37491E-07f, 9.39002E-07f, 3.59029E-06f, 1.22069E-05f, 3.05166E-05f, 4.88257E-05f, 5.74416E-05f, 6.00925E-05f,
				6.0794E-05f, 6.09719E-05f, 6.10165E-05f
			},
			new float[13]
			{
				7.44876E-09f, 2.97732E-08f, 1.18745E-07f, 4.69501E-07f, 1.79515E-06f, 6.10348E-06f, 1.52586E-05f, 2.44135E-05f, 2.87216E-05f, 3.00472E-05f,
				3.03979E-05f, 3.04869E-05f, 3.05092E-05f
			},
			new float[13]
			{
				3.72438E-09f, 1.48866E-08f, 5.93727E-08f, 2.34751E-07f, 8.97575E-07f, 3.05175E-06f, 7.62934E-06f, 1.22069E-05f, 1.4361E-05f, 1.50238E-05f,
				1.51992E-05f, 1.52437E-05f, 1.52548E-05f
			},
			new float[13]
			{
				1.86219E-09f, 7.44331E-09f, 2.96864E-08f, 1.17375E-07f, 4.48788E-07f, 1.52588E-06f, 3.81468E-06f, 6.10348E-06f, 7.18056E-06f, 7.51196E-06f,
				7.59965E-06f, 7.62189E-06f, 7.62747E-06f
			},
			new float[13]
			{
				9.31095E-10f, 3.72166E-09f, 1.48432E-08f, 5.86876E-08f, 2.24394E-07f, 7.62939E-07f, 1.90734E-06f, 3.05175E-06f, 3.59029E-06f, 3.756E-06f,
				3.79984E-06f, 3.81096E-06f, 3.81375E-06f
			},
			new float[13]
			{
				4.65548E-10f, 1.86083E-09f, 7.42159E-09f, 2.93438E-08f, 1.12197E-07f, 3.8147E-07f, 9.53673E-07f, 1.52588E-06f, 1.79515E-06f, 1.878E-06f,
				1.89992E-06f, 1.90548E-06f, 1.90688E-06f
			},
			new float[13]
			{
				2.32774E-10f, 9.30414E-10f, 3.71079E-09f, 1.46719E-08f, 5.60985E-08f, 1.90735E-07f, 4.76837E-07f, 7.62939E-07f, 8.97575E-07f, 9.39002E-07f,
				9.49963E-07f, 9.52743E-07f, 9.53441E-07f
			},
			new float[13]
			{
				1.16387E-10f, 4.65207E-10f, 1.8554E-09f, 7.33596E-09f, 2.80492E-08f, 9.53674E-08f, 2.38419E-07f, 3.8147E-07f, 4.48788E-07f, 4.69501E-07f,
				4.74982E-07f, 4.76372E-07f, 4.76721E-07f
			},
			new float[13]
			{
				5.81935E-11f, 2.32603E-10f, 9.27699E-10f, 3.66798E-09f, 1.40246E-08f, 4.76837E-08f, 1.19209E-07f, 1.90735E-07f, 2.24394E-07f, 2.34751E-07f,
				2.37491E-07f, 2.38186E-07f, 2.3836E-07f
			},
			new float[13]
			{
				2.90967E-11f, 1.16302E-10f, 4.63849E-10f, 1.83399E-09f, 7.01231E-09f, 2.38419E-08f, 5.96046E-08f, 9.53674E-08f, 1.12197E-07f, 1.17375E-07f,
				1.18745E-07f, 1.19093E-07f, 1.1918E-07f
			}
		};
		Q_div2_tab_right = new float[31][]
		{
			new float[13]
			{
				0.992246f, 0.992241f, 0.992218f, 0.992128f, 0.991768f, 0.990329f, 0.984615f, 0.962406f, 0.882759f, 0.663212f,
				0.332468f, 0.111015f, 0.0302959f
			},
			new float[13]
			{
				0.984612f,
				0.984601f,
				0.984556f,
				0.984379f,
				0.98367f,
				0.980843f,
				32f / 33f,
				0.927536f,
				0.790123f,
				0.496124f,
				0.199377f,
				0.0587695f,
				0.0153809f
			},
			new float[13]
			{
				0.96969f, 0.969668f, 0.969582f, 0.969238f, 0.967864f, 0.962406f, 0.941176f, 0.864865f, 0.653061f, 0.329897f,
				0.110727f, 0.0302744f, 0.00775006f
			},
			new float[13]
			{
				0.941163f, 0.941122f, 0.94096f, 0.940312f, 0.937729f, 0.927536f, 0.888889f, 0.761905f, 0.484848f, 0.197531f,
				0.0586081f, 0.0153698f, 0.0038901f
			},
			new float[13]
			{
				0.888865f, 0.888792f, 0.888503f, 0.887348f, 0.882759f, 0.864865f, 0.8f, 0.615385f, 0.32f, 0.109589f,
				0.0301887f, 0.00774443f, 0.00194884f
			},
			new float[13]
			{
				0.799961f, 0.799844f, 0.799375f, 0.797508f, 0.790123f, 0.761905f, 0.666667f, 0.444444f, 0.190476f, 0.057971f,
				0.0153257f, 0.00388727f, 0.000975372f
			},
			new float[13]
			{
				0.666612f, 0.66645f, 0.6658f, 0.663212f, 0.653061f, 0.615385f, 0.5f, 0.285714f, 0.105263f, 0.0298507f,
				0.00772201f, 0.00194742f, 0.000487924f
			},
			new float[13]
			{
				0.499939f, 0.499756f, 0.499025f, 0.496124f, 0.484848f, 0.444444f, 0.333333f, 0.166667f, 0.0555556f, 0.0151515f,
				0.00387597f, 0.000974659f, 0.000244021f
			},
			new float[13]
			{
				0.333279f, 0.333116f, 0.332468f, 0.329897f, 0.32f, 0.285714f, 0.2f, 0.0909091f, 0.0285714f, 0.00763359f,
				0.00194175f, 0.000487567f, 0.000122026f
			},
			new float[13]
			{
				0.199961f, 0.199844f, 0.199377f, 0.197531f, 0.190476f, 0.166667f, 0.111111f, 0.047619f, 0.0144928f, 0.00383142f,
				0.000971817f, 0.000243843f, 6.10165E-05f
			},
			new float[13]
			{
				0.111087f,
				0.111015f,
				0.110727f,
				0.109589f,
				0.105263f,
				0.0909091f,
				0.0588235f,
				0.0243902f,
				1f / 137f,
				0.00191939f,
				0.000486145f,
				0.000121936f,
				3.05092E-05f
			},
			new float[13]
			{
				0.05881f, 0.0587695f, 0.0586081f, 0.057971f, 0.0555556f, 0.047619f, 0.030303f, 0.0123457f, 0.003663f, 0.000960615f,
				0.000243132f, 6.09719E-05f, 1.52548E-05f
			},
			new float[13]
			{
				0.0302959f, 0.0302744f, 0.0301887f, 0.0298507f, 0.0285714f, 0.0243902f, 0.0153846f, 0.00621118f, 0.00183486f, 0.000480538f,
				0.000121581f, 3.04869E-05f, 7.62747E-06f
			},
			new float[13]
			{
				0.0153809f, 0.0153698f, 0.0153257f, 0.0151515f, 0.0144928f, 0.0123457f, 0.00775194f, 0.00311526f, 0.000918274f, 0.000240327f,
				6.0794E-05f, 1.52437E-05f, 3.81375E-06f
			},
			new float[13]
			{
				0.00775006f,
				0.00774443f,
				0.00772201f,
				0.00763359f,
				1f / 137f,
				0.00621118f,
				0.00389105f,
				0.00156006f,
				0.000459348f,
				0.000120178f,
				3.03979E-05f,
				7.62189E-06f,
				1.90688E-06f
			},
			new float[13]
			{
				0.0038901f, 0.00388727f, 0.00387597f, 0.00383142f, 0.003663f, 0.00311526f, 0.00194932f, 0.00078064f, 0.000229727f, 6.00925E-05f,
				1.51992E-05f, 3.81096E-06f, 9.53441E-07f
			},
			new float[13]
			{
				0.00194884f, 0.00194742f, 0.00194175f, 0.00191939f, 0.00183486f, 0.00156006f, 0.00097561f, 0.000390472f, 0.000114877f, 3.00472E-05f,
				7.59965E-06f, 1.90548E-06f, 4.76721E-07f
			},
			new float[13]
			{
				0.000975372f, 0.000974659f, 0.000971817f, 0.000960615f, 0.000918274f, 0.00078064f, 0.000488043f, 0.000195274f, 5.74416E-05f, 1.50238E-05f,
				3.79984E-06f, 9.52743E-07f, 2.3836E-07f
			},
			new float[13]
			{
				0.000487924f, 0.000487567f, 0.000486145f, 0.000480538f, 0.000459348f, 0.000390472f, 0.000244081f, 9.76467E-05f, 2.87216E-05f, 7.51196E-06f,
				1.89992E-06f, 4.76372E-07f, 1.1918E-07f
			},
			new float[13]
			{
				0.000244021f, 0.000243843f, 0.000243132f, 0.000240327f, 0.000229727f, 0.000195274f, 0.000122055f, 4.88257E-05f, 1.4361E-05f, 3.756E-06f,
				9.49963E-07f, 2.38186E-07f, 5.95901E-08f
			},
			new float[13]
			{
				0.000122026f, 0.000121936f, 0.000121581f, 0.000120178f, 0.000114877f, 9.76467E-05f, 6.10314E-05f, 2.44135E-05f, 7.18056E-06f, 1.878E-06f,
				4.74982E-07f, 1.19093E-07f, 2.9795E-08f
			},
			new float[13]
			{
				6.10165E-05f, 6.09719E-05f, 6.0794E-05f, 6.00925E-05f, 5.74416E-05f, 4.88257E-05f, 3.05166E-05f, 1.22069E-05f, 3.59029E-06f, 9.39002E-07f,
				2.37491E-07f, 5.95465E-08f, 1.48975E-08f
			},
			new float[13]
			{
				3.05092E-05f, 3.04869E-05f, 3.03979E-05f, 3.00472E-05f, 2.87216E-05f, 2.44135E-05f, 1.52586E-05f, 6.10348E-06f, 1.79515E-06f, 4.69501E-07f,
				1.18745E-07f, 2.97732E-08f, 7.44876E-09f
			},
			new float[13]
			{
				1.52548E-05f, 1.52437E-05f, 1.51992E-05f, 1.50238E-05f, 1.4361E-05f, 1.22069E-05f, 7.62934E-06f, 3.05175E-06f, 8.97575E-07f, 2.34751E-07f,
				5.93727E-08f, 1.48866E-08f, 3.72438E-09f
			},
			new float[13]
			{
				7.62747E-06f, 7.62189E-06f, 7.59965E-06f, 7.51196E-06f, 7.18056E-06f, 6.10348E-06f, 3.81468E-06f, 1.52588E-06f, 4.48788E-07f, 1.17375E-07f,
				2.96864E-08f, 7.44331E-09f, 1.86219E-09f
			},
			new float[13]
			{
				3.81375E-06f, 3.81096E-06f, 3.79984E-06f, 3.756E-06f, 3.59029E-06f, 3.05175E-06f, 1.90734E-06f, 7.62939E-07f, 2.24394E-07f, 5.86876E-08f,
				1.48432E-08f, 3.72166E-09f, 9.31095E-10f
			},
			new float[13]
			{
				1.90688E-06f, 1.90548E-06f, 1.89992E-06f, 1.878E-06f, 1.79515E-06f, 1.52588E-06f, 9.53673E-07f, 3.8147E-07f, 1.12197E-07f, 2.93438E-08f,
				7.42159E-09f, 1.86083E-09f, 4.65548E-10f
			},
			new float[13]
			{
				9.53441E-07f, 9.52743E-07f, 9.49963E-07f, 9.39002E-07f, 8.97575E-07f, 7.62939E-07f, 4.76837E-07f, 1.90735E-07f, 5.60985E-08f, 1.46719E-08f,
				3.71079E-09f, 9.30414E-10f, 2.32774E-10f
			},
			new float[13]
			{
				4.76721E-07f, 4.76372E-07f, 4.74982E-07f, 4.69501E-07f, 4.48788E-07f, 3.8147E-07f, 2.38419E-07f, 9.53674E-08f, 2.80492E-08f, 7.33596E-09f,
				1.8554E-09f, 4.65207E-10f, 1.16387E-10f
			},
			new float[13]
			{
				2.3836E-07f, 2.38186E-07f, 2.37491E-07f, 2.34751E-07f, 2.24394E-07f, 1.90735E-07f, 1.19209E-07f, 4.76837E-08f, 1.40246E-08f, 3.66798E-09f,
				9.27699E-10f, 2.32603E-10f, 5.81935E-11f
			},
			new float[13]
			{
				1.1918E-07f, 1.19093E-07f, 1.18745E-07f, 1.17375E-07f, 1.12197E-07f, 9.53674E-08f, 5.96046E-08f, 2.38419E-08f, 7.01231E-09f, 1.83399E-09f,
				4.63849E-10f, 1.16302E-10f, 2.90967E-11f
			}
		};
		Q_div_tab = new float[31]
		{
			0.0153846f,
			0.030303f,
			0.0588235f,
			0.111111f,
			0.2f,
			0.333333f,
			0.5f,
			0.666667f,
			0.8f,
			0.888889f,
			0.941176f,
			32f / 33f,
			0.984615f,
			0.992248f,
			0.996109f,
			0.998051f,
			0.999024f,
			0.999512f,
			0.999756f,
			0.999878f,
			0.999939f,
			0.999969f,
			0.999985f,
			0.999992f,
			0.999996f,
			0.999998f,
			0.999999f,
			1f,
			1f,
			1f,
			1f
		};
		Q_div_tab_left = new float[31][]
		{
			new float[13]
			{
				0.969704f, 0.888985f, 0.667532f, 0.336788f, 0.117241f, 0.037594f, 0.0153846f, 0.00967118f, 0.00823245f, 0.00787211f,
				0.00778198f, 0.00775945f, 0.00775382f
			},
			new float[13]
			{
				0.984619f,
				0.94123f,
				0.800623f,
				65f / 129f,
				0.209877f,
				0.0724638f,
				0.030303f,
				0.0191571f,
				0.0163305f,
				0.0156212f,
				0.0154438f,
				0.0153994f,
				0.0153883f
			},
			new float[13]
			{
				0.99225f, 0.969726f, 0.889273f, 0.670103f, 0.346939f, 0.135135f, 0.0588235f, 0.037594f, 0.0321361f, 0.0307619f,
				0.0304178f, 0.0303317f, 0.0303102f
			},
			new float[13]
			{
				0.99611f, 0.98463f, 0.941392f, 0.802469f, 0.515152f, 0.238095f, 0.111111f, 0.0724638f, 0.0622711f, 0.0596878f,
				0.0590397f, 0.0588776f, 0.058837f
			},
			new float[13]
			{
				0.998051f, 0.992256f, 0.969811f, 0.890411f, 0.68f, 0.384615f, 0.2f, 0.135135f, 0.117241f, 0.112652f,
				0.111497f, 0.111208f, 0.111135f
			},
			new float[13]
			{
				0.999025f,
				0.996113f,
				0.984674f,
				65f / 69f,
				0.809524f,
				0.555556f,
				0.333333f,
				0.238095f,
				0.209877f,
				0.202492f,
				0.200625f,
				0.200156f,
				0.200039f
			},
			new float[13]
			{
				0.999512f, 0.998053f, 0.992278f, 0.970149f, 0.894737f, 0.714286f, 0.5f, 0.384615f, 0.346939f, 0.336788f,
				0.3342f, 0.33355f, 0.333388f
			},
			new float[13]
			{
				0.999756f,
				0.999025f,
				0.996124f,
				0.984848f,
				0.944444f,
				0.833333f,
				0.666667f,
				0.555556f,
				0.515152f,
				65f / 129f,
				0.500975f,
				0.500244f,
				0.500061f
			},
			new float[13]
			{
				0.999878f, 0.999512f, 0.998058f, 0.992366f, 0.971429f, 0.909091f, 0.8f, 0.714286f, 0.68f, 0.670103f,
				0.667532f, 0.666884f, 0.666721f
			},
			new float[13]
			{
				0.999939f, 0.999756f, 0.999028f, 0.996169f, 0.985507f, 0.952381f, 0.888889f, 0.833333f, 0.809524f, 0.802469f,
				0.800623f, 0.800156f, 0.800039f
			},
			new float[13]
			{
				0.999969f, 0.999878f, 0.999514f, 0.998081f, 0.992701f, 0.97561f, 0.941176f, 0.909091f, 0.894737f, 0.890411f,
				0.889273f, 0.888985f, 0.888913f
			},
			new float[13]
			{
				0.999985f,
				0.999939f,
				0.999757f,
				0.999039f,
				0.996337f,
				0.987654f,
				32f / 33f,
				0.952381f,
				0.944444f,
				65f / 69f,
				0.941392f,
				0.94123f,
				0.94119f
			},
			new float[13]
			{
				0.999992f, 0.99997f, 0.999878f, 0.999519f, 0.998165f, 0.993789f, 0.984615f, 0.97561f, 0.971429f, 0.970149f,
				0.969811f, 0.969726f, 0.969704f
			},
			new float[13]
			{
				0.999996f, 0.999985f, 0.999939f, 0.99976f, 0.999082f, 0.996885f, 0.992248f, 0.987654f, 0.985507f, 0.984848f,
				0.984674f, 0.98463f, 0.984619f
			},
			new float[13]
			{
				0.999998f, 0.999992f, 0.99997f, 0.99988f, 0.999541f, 0.99844f, 0.996109f, 0.993789f, 0.992701f, 0.992366f,
				0.992278f, 0.992256f, 0.99225f
			},
			new float[13]
			{
				0.999999f, 0.999996f, 0.999985f, 0.99994f, 0.99977f, 0.999219f, 0.998051f, 0.996885f, 0.996337f, 0.996169f,
				0.996124f, 0.996113f, 0.99611f
			},
			new float[13]
			{
				1f, 0.999998f, 0.999992f, 0.99997f, 0.999885f, 0.99961f, 0.999024f, 0.99844f, 0.998165f, 0.998081f,
				0.998058f, 0.998053f, 0.998051f
			},
			new float[13]
			{
				1f, 0.999999f, 0.999996f, 0.999985f, 0.999943f, 0.999805f, 0.999512f, 0.999219f, 0.999082f, 0.999039f,
				0.999028f, 0.999025f, 0.999025f
			},
			new float[13]
			{
				1f, 1f, 0.999998f, 0.999992f, 0.999971f, 0.999902f, 0.999756f, 0.99961f, 0.999541f, 0.999519f,
				0.999514f, 0.999512f, 0.999512f
			},
			new float[13]
			{
				1f, 1f, 0.999999f, 0.999996f, 0.999986f, 0.999951f, 0.999878f, 0.999805f, 0.99977f, 0.99976f,
				0.999757f, 0.999756f, 0.999756f
			},
			new float[13]
			{
				1f, 1f, 1f, 0.999998f, 0.999993f, 0.999976f, 0.999939f, 0.999902f, 0.999885f, 0.99988f,
				0.999878f, 0.999878f, 0.999878f
			},
			new float[13]
			{
				1f, 1f, 1f, 0.999999f, 0.999996f, 0.999988f, 0.999969f, 0.999951f, 0.999943f, 0.99994f,
				0.999939f, 0.999939f, 0.999939f
			},
			new float[13]
			{
				1f, 1f, 1f, 1f, 0.999998f, 0.999994f, 0.999985f, 0.999976f, 0.999971f, 0.99997f,
				0.99997f, 0.99997f, 0.999969f
			},
			new float[13]
			{
				1f, 1f, 1f, 1f, 0.999999f, 0.999997f, 0.999992f, 0.999988f, 0.999986f, 0.999985f,
				0.999985f, 0.999985f, 0.999985f
			},
			new float[13]
			{
				1f, 1f, 1f, 1f, 1f, 0.999998f, 0.999996f, 0.999994f, 0.999993f, 0.999992f,
				0.999992f, 0.999992f, 0.999992f
			},
			new float[13]
			{
				1f, 1f, 1f, 1f, 1f, 0.999999f, 0.999998f, 0.999997f, 0.999996f, 0.999996f,
				0.999996f, 0.999996f, 0.999996f
			},
			new float[13]
			{
				1f, 1f, 1f, 1f, 1f, 1f, 0.999999f, 0.999998f, 0.999998f, 0.999998f,
				0.999998f, 0.999998f, 0.999998f
			},
			new float[13]
			{
				1f, 1f, 1f, 1f, 1f, 1f, 1f, 0.999999f, 0.999999f, 0.999999f,
				0.999999f, 0.999999f, 0.999999f
			},
			new float[13]
			{
				1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f,
				1f, 1f, 1f
			},
			new float[13]
			{
				1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f,
				1f, 1f, 1f
			},
			new float[13]
			{
				1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f,
				1f, 1f, 1f
			}
		};
		Q_div_tab_right = new float[31][]
		{
			new float[13]
			{
				0.00775382f, 0.00775945f, 0.00778198f, 0.00787211f, 0.00823245f, 0.00967118f, 0.0153846f, 0.037594f, 0.117241f, 0.336788f,
				0.667532f, 0.888985f, 0.969704f
			},
			new float[13]
			{
				0.0153883f,
				0.0153994f,
				0.0154438f,
				0.0156212f,
				0.0163305f,
				0.0191571f,
				0.030303f,
				0.0724638f,
				0.209877f,
				65f / 129f,
				0.800623f,
				0.94123f,
				0.984619f
			},
			new float[13]
			{
				0.0303102f, 0.0303317f, 0.0304178f, 0.0307619f, 0.0321361f, 0.037594f, 0.0588235f, 0.135135f, 0.346939f, 0.670103f,
				0.889273f, 0.969726f, 0.99225f
			},
			new float[13]
			{
				0.058837f, 0.0588776f, 0.0590397f, 0.0596878f, 0.0622711f, 0.0724638f, 0.111111f, 0.238095f, 0.515152f, 0.802469f,
				0.941392f, 0.98463f, 0.99611f
			},
			new float[13]
			{
				0.111135f, 0.111208f, 0.111497f, 0.112652f, 0.117241f, 0.135135f, 0.2f, 0.384615f, 0.68f, 0.890411f,
				0.969811f, 0.992256f, 0.998051f
			},
			new float[13]
			{
				0.200039f,
				0.200156f,
				0.200625f,
				0.202492f,
				0.209877f,
				0.238095f,
				0.333333f,
				0.555556f,
				0.809524f,
				65f / 69f,
				0.984674f,
				0.996113f,
				0.999025f
			},
			new float[13]
			{
				0.333388f, 0.33355f, 0.3342f, 0.336788f, 0.346939f, 0.384615f, 0.5f, 0.714286f, 0.894737f, 0.970149f,
				0.992278f, 0.998053f, 0.999512f
			},
			new float[13]
			{
				0.500061f,
				0.500244f,
				0.500975f,
				65f / 129f,
				0.515152f,
				0.555556f,
				0.666667f,
				0.833333f,
				0.944444f,
				0.984848f,
				0.996124f,
				0.999025f,
				0.999756f
			},
			new float[13]
			{
				0.666721f, 0.666884f, 0.667532f, 0.670103f, 0.68f, 0.714286f, 0.8f, 0.909091f, 0.971429f, 0.992366f,
				0.998058f, 0.999512f, 0.999878f
			},
			new float[13]
			{
				0.800039f, 0.800156f, 0.800623f, 0.802469f, 0.809524f, 0.833333f, 0.888889f, 0.952381f, 0.985507f, 0.996169f,
				0.999028f, 0.999756f, 0.999939f
			},
			new float[13]
			{
				0.888913f, 0.888985f, 0.889273f, 0.890411f, 0.894737f, 0.909091f, 0.941176f, 0.97561f, 0.992701f, 0.998081f,
				0.999514f, 0.999878f, 0.999969f
			},
			new float[13]
			{
				0.94119f,
				0.94123f,
				0.941392f,
				65f / 69f,
				0.944444f,
				0.952381f,
				32f / 33f,
				0.987654f,
				0.996337f,
				0.999039f,
				0.999757f,
				0.999939f,
				0.999985f
			},
			new float[13]
			{
				0.969704f, 0.969726f, 0.969811f, 0.970149f, 0.971429f, 0.97561f, 0.984615f, 0.993789f, 0.998165f, 0.999519f,
				0.999878f, 0.99997f, 0.999992f
			},
			new float[13]
			{
				0.984619f, 0.98463f, 0.984674f, 0.984848f, 0.985507f, 0.987654f, 0.992248f, 0.996885f, 0.999082f, 0.99976f,
				0.999939f, 0.999985f, 0.999996f
			},
			new float[13]
			{
				0.99225f, 0.992256f, 0.992278f, 0.992366f, 0.992701f, 0.993789f, 0.996109f, 0.99844f, 0.999541f, 0.99988f,
				0.99997f, 0.999992f, 0.999998f
			},
			new float[13]
			{
				0.99611f, 0.996113f, 0.996124f, 0.996169f, 0.996337f, 0.996885f, 0.998051f, 0.999219f, 0.99977f, 0.99994f,
				0.999985f, 0.999996f, 0.999999f
			},
			new float[13]
			{
				0.998051f, 0.998053f, 0.998058f, 0.998081f, 0.998165f, 0.99844f, 0.999024f, 0.99961f, 0.999885f, 0.99997f,
				0.999992f, 0.999998f, 1f
			},
			new float[13]
			{
				0.999025f, 0.999025f, 0.999028f, 0.999039f, 0.999082f, 0.999219f, 0.999512f, 0.999805f, 0.999943f, 0.999985f,
				0.999996f, 0.999999f, 1f
			},
			new float[13]
			{
				0.999512f, 0.999512f, 0.999514f, 0.999519f, 0.999541f, 0.99961f, 0.999756f, 0.999902f, 0.999971f, 0.999992f,
				0.999998f, 1f, 1f
			},
			new float[13]
			{
				0.999756f, 0.999756f, 0.999757f, 0.99976f, 0.99977f, 0.999805f, 0.999878f, 0.999951f, 0.999986f, 0.999996f,
				0.999999f, 1f, 1f
			},
			new float[13]
			{
				0.999878f, 0.999878f, 0.999878f, 0.99988f, 0.999885f, 0.999902f, 0.999939f, 0.999976f, 0.999993f, 0.999998f,
				1f, 1f, 1f
			},
			new float[13]
			{
				0.999939f, 0.999939f, 0.999939f, 0.99994f, 0.999943f, 0.999951f, 0.999969f, 0.999988f, 0.999996f, 0.999999f,
				1f, 1f, 1f
			},
			new float[13]
			{
				0.999969f, 0.99997f, 0.99997f, 0.99997f, 0.999971f, 0.999976f, 0.999985f, 0.999994f, 0.999998f, 1f,
				1f, 1f, 1f
			},
			new float[13]
			{
				0.999985f, 0.999985f, 0.999985f, 0.999985f, 0.999986f, 0.999988f, 0.999992f, 0.999997f, 0.999999f, 1f,
				1f, 1f, 1f
			},
			new float[13]
			{
				0.999992f, 0.999992f, 0.999992f, 0.999992f, 0.999993f, 0.999994f, 0.999996f, 0.999998f, 1f, 1f,
				1f, 1f, 1f
			},
			new float[13]
			{
				0.999996f, 0.999996f, 0.999996f, 0.999996f, 0.999996f, 0.999997f, 0.999998f, 0.999999f, 1f, 1f,
				1f, 1f, 1f
			},
			new float[13]
			{
				0.999998f, 0.999998f, 0.999998f, 0.999998f, 0.999998f, 0.999998f, 0.999999f, 1f, 1f, 1f,
				1f, 1f, 1f
			},
			new float[13]
			{
				0.999999f, 0.999999f, 0.999999f, 0.999999f, 0.999999f, 0.999999f, 1f, 1f, 1f, 1f,
				1f, 1f, 1f
			},
			new float[13]
			{
				1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f,
				1f, 1f, 1f
			},
			new float[13]
			{
				1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f,
				1f, 1f, 1f
			},
			new float[13]
			{
				1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f,
				1f, 1f, 1f
			}
		};
		E_pan_tab = new float[25]
		{
			0.000244081f,
			0.000488043f,
			0.00097561f,
			0.00194932f,
			0.00389105f,
			0.00775194f,
			0.0153846f,
			0.030303f,
			0.0588235f,
			0.111111f,
			0.2f,
			0.333333f,
			0.5f,
			0.666667f,
			0.8f,
			0.888889f,
			0.941176f,
			32f / 33f,
			0.984615f,
			0.992248f,
			0.996109f,
			0.998051f,
			0.999024f,
			0.999512f,
			0.999756f
		};
	}
}
