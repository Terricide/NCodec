using System.Runtime.CompilerServices;
using IKVM.Attributes;
using java.lang;

namespace org.jcodec.codecs.aac.blocks;

public class AACTab : Object
{
	internal static int[] codes1;

	internal static int[] bits1;

	internal static int[] codes2;

	internal static int[] bits2;

	internal static int[] codes3;

	internal static int[] bits3;

	internal static int[] codes4;

	internal static int[] bits4;

	internal static int[] codes5;

	internal static int[] bits5;

	internal static int[] codes6;

	internal static int[] bits6;

	internal static int[] codes7;

	internal static int[] bits7;

	internal static int[] codes8;

	internal static int[] bits8;

	internal static int[] codes9;

	internal static int[] bits9;

	internal static int[] codes10;

	internal static int[] bits10;

	internal static int[] codes11;

	internal static int[] bits11;

	internal static int[] ff_aac_scalefactor_code;

	internal static int[] ff_aac_scalefactor_bits;

	internal static int[] maxSfbTab;

	internal static float[] ltpCoefTab;

	[Modifiers(Modifiers.Static | Modifiers.Final)]
	internal static int[] ff_aac_num_swb_1024;

	[Modifiers(Modifiers.Static | Modifiers.Final)]
	internal static int[] ff_aac_num_swb_128;

	[Modifiers(Modifiers.Static | Modifiers.Final)]
	internal static int[] swb_offset_1024_96;

	[Modifiers(Modifiers.Static | Modifiers.Final)]
	internal static int[] swb_offset_128_96;

	[Modifiers(Modifiers.Static | Modifiers.Final)]
	internal static int[] swb_offset_1024_64;

	[Modifiers(Modifiers.Static | Modifiers.Final)]
	internal static int[] swb_offset_1024_48;

	[Modifiers(Modifiers.Static | Modifiers.Final)]
	internal static int[] swb_offset_128_48;

	[Modifiers(Modifiers.Static | Modifiers.Final)]
	internal static int[] swb_offset_1024_32;

	[Modifiers(Modifiers.Static | Modifiers.Final)]
	internal static int[] swb_offset_1024_24;

	[Modifiers(Modifiers.Static | Modifiers.Final)]
	internal static int[] swb_offset_128_24;

	[Modifiers(Modifiers.Static | Modifiers.Final)]
	internal static int[] swb_offset_1024_16;

	[Modifiers(Modifiers.Static | Modifiers.Final)]
	internal static int[] swb_offset_128_16;

	[Modifiers(Modifiers.Static | Modifiers.Final)]
	internal static int[] swb_offset_1024_8;

	[Modifiers(Modifiers.Static | Modifiers.Final)]
	internal static int[] swb_offset_128_8;

	[Modifiers(Modifiers.Static | Modifiers.Final)]
	internal static int[][] ff_swb_offset_1024;

	[Modifiers(Modifiers.Static | Modifiers.Final)]
	internal static int[][] ff_swb_offset_128;

	[Modifiers(Modifiers.Static | Modifiers.Final)]
	internal static float[] tns_tmp2_map_1_3;

	[Modifiers(Modifiers.Static | Modifiers.Final)]
	internal static float[] tns_tmp2_map_0_3;

	[Modifiers(Modifiers.Static | Modifiers.Final)]
	internal static float[] tns_tmp2_map_1_4;

	[Modifiers(Modifiers.Static | Modifiers.Final)]
	internal static float[] tns_tmp2_map_0_4;

	[Modifiers(Modifiers.Static | Modifiers.Final)]
	internal static float[][] tns_tmp2_map;

	internal static float[] codebook_vector0_vals;

	internal static int[] codebook_vector02_idx;

	internal static float[] codebook_vector4_vals;

	internal static int[] codebook_vector4_idx;

	internal static int[] codebook_vector6_idx;

	internal static int[] codebook_vector8_idx;

	internal static float[] codebook_vector10_vals;

	internal static int[] codebook_vector10_idx;

	[MethodImpl(MethodImplOptions.NoInlining)]
	[SpecialName]
	public static void ___003Cclinit_003E()
	{
	}

	[MethodImpl(MethodImplOptions.NoInlining)]
	[LineNumberTable(10)]
	public AACTab()
	{
	}

	[LineNumberTable(new byte[]
	{
		159,
		140,
		162,
		byte.MaxValue,
		162,
		26,
		71,
		223,
		161,
		106,
		byte.MaxValue,
		161,
		233,
		71,
		223,
		161,
		72,
		byte.MaxValue,
		162,
		76,
		72,
		223,
		161,
		118,
		byte.MaxValue,
		162,
		42,
		71,
		223,
		161,
		93,
		byte.MaxValue,
		162,
		85,
		72,
		223,
		161,
		114,
		byte.MaxValue,
		162,
		3,
		71,
		223,
		161,
		93,
		byte.MaxValue,
		161,
		187,
		70,
		223,
		161,
		14,
		byte.MaxValue,
		161,
		112,
		70,
		191,
		160,
		241,
		byte.MaxValue,
		165,
		240,
		79,
		byte.MaxValue,
		164,
		6,
		72,
		byte.MaxValue,
		165,
		144,
		77,
		byte.MaxValue,
		163,
		214,
		71,
		byte.MaxValue,
		171,
		80,
		85,
		byte.MaxValue,
		167,
		247,
		75,
		byte.MaxValue,
		163,
		186,
		76,
		byte.MaxValue,
		162,
		104,
		70,
		159,
		51,
		191,
		45,
		159,
		51,
		159,
		51,
		223,
		160,
		218,
		159,
		51,
		223,
		161,
		16,
		223,
		161,
		40,
		159,
		63,
		223,
		161,
		58,
		223,
		161,
		16,
		159,
		69,
		223,
		161,
		2,
		159,
		69,
		223,
		160,
		244,
		159,
		69,
		223,
		90,
		223,
		90,
		159,
		13,
		191,
		45,
		191,
		45,
		223,
		117,
		191,
		13,
		byte.MaxValue,
		5,
		70,
		byte.MaxValue,
		162,
		122,
		72,
		byte.MaxValue,
		54,
		70,
		byte.MaxValue,
		161,
		157,
		76,
		byte.MaxValue,
		161,
		225,
		75,
		byte.MaxValue,
		166,
		16,
		79,
		byte.MaxValue,
		117,
		72
	})]
	static AACTab()
	{
		codes1 = new int[81]
		{
			2040, 497, 2045, 1013, 104, 1008, 2039, 492, 2037, 1009,
			114, 1012, 116, 17, 118, 491, 108, 1014, 2044, 481,
			2033, 496, 97, 502, 2034, 490, 2043, 498, 105, 493,
			119, 23, 111, 486, 100, 485, 103, 21, 98, 18,
			0, 20, 101, 22, 109, 489, 99, 484, 107, 19,
			113, 483, 112, 499, 2046, 487, 2035, 495, 96, 494,
			2032, 482, 2042, 1011, 106, 488, 117, 16, 115, 500,
			110, 1015, 2038, 480, 2041, 1010, 102, 501, 2047, 503,
			2036
		};
		bits1 = new int[81]
		{
			11, 9, 11, 10, 7, 10, 11, 9, 11, 10,
			7, 10, 7, 5, 7, 9, 7, 10, 11, 9,
			11, 9, 7, 9, 11, 9, 11, 9, 7, 9,
			7, 5, 7, 9, 7, 9, 7, 5, 7, 5,
			1, 5, 7, 5, 7, 9, 7, 9, 7, 5,
			7, 9, 7, 9, 11, 9, 11, 9, 7, 9,
			11, 9, 11, 10, 7, 9, 7, 5, 7, 9,
			7, 10, 11, 9, 11, 10, 7, 9, 11, 9,
			11
		};
		codes2 = new int[81]
		{
			499, 111, 509, 235, 35, 234, 503, 232, 506, 242,
			45, 112, 32, 6, 43, 110, 40, 233, 505, 102,
			248, 231, 27, 241, 500, 107, 501, 236, 42, 108,
			44, 10, 39, 103, 26, 245, 36, 8, 31, 9,
			0, 7, 29, 11, 48, 239, 28, 100, 30, 12,
			41, 243, 47, 240, 508, 113, 498, 244, 33, 230,
			247, 104, 504, 238, 34, 101, 49, 2, 38, 237,
			37, 106, 507, 114, 510, 105, 46, 246, 511, 109,
			502
		};
		bits2 = new int[81]
		{
			9, 7, 9, 8, 6, 8, 9, 8, 9, 8,
			6, 7, 6, 5, 6, 7, 6, 8, 9, 7,
			8, 8, 6, 8, 9, 7, 9, 8, 6, 7,
			6, 5, 6, 7, 6, 8, 6, 5, 6, 5,
			3, 5, 6, 5, 6, 8, 6, 7, 6, 5,
			6, 8, 6, 8, 9, 7, 9, 8, 6, 8,
			8, 7, 9, 8, 6, 7, 6, 4, 6, 8,
			6, 7, 9, 7, 9, 7, 6, 8, 9, 7,
			9
		};
		codes3 = new int[81]
		{
			0, 9, 239, 11, 25, 240, 491, 486, 1010, 10,
			53, 495, 52, 55, 489, 493, 487, 1011, 494, 1005,
			8186, 492, 498, 2041, 2040, 1016, 4088, 8, 56, 1014,
			54, 117, 1009, 1003, 1004, 4084, 24, 118, 2036, 57,
			116, 1007, 499, 500, 2038, 488, 1002, 8188, 242, 497,
			4091, 1013, 2035, 4092, 238, 1015, 32766, 496, 2037, 32765,
			8187, 16378, 65535, 241, 1008, 16380, 490, 1006, 16379, 4086,
			4090, 32764, 2034, 4085, 65534, 1012, 2039, 32763, 4087, 4089,
			32762
		};
		bits3 = new int[81]
		{
			1, 4, 8, 4, 5, 8, 9, 9, 10, 4,
			6, 9, 6, 6, 9, 9, 9, 10, 9, 10,
			13, 9, 9, 11, 11, 10, 12, 4, 6, 10,
			6, 7, 10, 10, 10, 12, 5, 7, 11, 6,
			7, 10, 9, 9, 11, 9, 10, 13, 8, 9,
			12, 10, 11, 12, 8, 10, 15, 9, 11, 15,
			13, 14, 16, 8, 10, 14, 9, 10, 14, 12,
			12, 15, 11, 12, 16, 10, 11, 15, 12, 12,
			15
		};
		codes4 = new int[81]
		{
			7, 22, 246, 24, 8, 239, 495, 243, 2040, 25,
			23, 237, 21, 1, 226, 240, 112, 1008, 494, 241,
			2042, 238, 228, 1010, 2038, 1007, 2045, 5, 20, 242,
			9, 4, 229, 244, 232, 1012, 6, 2, 231, 3,
			0, 107, 227, 105, 499, 235, 230, 1014, 110, 106,
			500, 1004, 496, 1017, 245, 236, 2043, 234, 111, 1015,
			2041, 1011, 4095, 233, 109, 1016, 108, 104, 501, 1006,
			498, 2036, 2039, 1009, 4094, 1005, 497, 2037, 2046, 1013,
			2044
		};
		bits4 = new int[81]
		{
			4, 5, 8, 5, 4, 8, 9, 8, 11, 5,
			5, 8, 5, 4, 8, 8, 7, 10, 9, 8,
			11, 8, 8, 10, 11, 10, 11, 4, 5, 8,
			4, 4, 8, 8, 8, 10, 4, 4, 8, 4,
			4, 7, 8, 7, 9, 8, 8, 10, 7, 7,
			9, 10, 9, 10, 8, 8, 11, 8, 7, 10,
			11, 10, 12, 8, 7, 10, 7, 7, 9, 10,
			9, 11, 11, 10, 12, 10, 9, 11, 11, 10,
			11
		};
		codes5 = new int[81]
		{
			8191, 4087, 2036, 2024, 1009, 2030, 2041, 4088, 8189, 4093,
			2033, 1000, 488, 240, 492, 1006, 2034, 4090, 4084, 1007,
			498, 232, 112, 236, 496, 1002, 2035, 2027, 491, 234,
			26, 8, 25, 238, 495, 2029, 1008, 242, 115, 11,
			0, 10, 113, 243, 2025, 2031, 494, 239, 24, 9,
			27, 235, 489, 2028, 2038, 1003, 499, 237, 114, 233,
			497, 1005, 2039, 4086, 2032, 1001, 493, 241, 490, 1004,
			2040, 4089, 8188, 4092, 4085, 2026, 1011, 1010, 2037, 4091,
			8190
		};
		bits5 = new int[81]
		{
			13, 12, 11, 11, 10, 11, 11, 12, 13, 12,
			11, 10, 9, 8, 9, 10, 11, 12, 12, 10,
			9, 8, 7, 8, 9, 10, 11, 11, 9, 8,
			5, 4, 5, 8, 9, 11, 10, 8, 7, 4,
			1, 4, 7, 8, 11, 11, 9, 8, 5, 4,
			5, 8, 9, 11, 11, 10, 9, 8, 7, 8,
			9, 10, 11, 12, 11, 10, 9, 8, 9, 10,
			11, 12, 13, 12, 12, 11, 10, 10, 11, 12,
			13
		};
		codes6 = new int[81]
		{
			2046, 1021, 497, 491, 500, 490, 496, 1020, 2045, 1014,
			485, 234, 108, 113, 104, 240, 486, 1015, 499, 239,
			50, 39, 40, 38, 49, 235, 503, 488, 111, 46,
			8, 4, 6, 41, 107, 494, 495, 114, 45, 2,
			0, 3, 47, 115, 506, 487, 110, 43, 7, 1,
			5, 44, 109, 492, 505, 238, 48, 36, 42, 37,
			51, 236, 498, 1016, 484, 237, 106, 112, 105, 116,
			241, 1018, 2047, 1017, 502, 493, 504, 489, 501, 1019,
			2044
		};
		bits6 = new int[81]
		{
			11, 10, 9, 9, 9, 9, 9, 10, 11, 10,
			9, 8, 7, 7, 7, 8, 9, 10, 9, 8,
			6, 6, 6, 6, 6, 8, 9, 9, 7, 6,
			4, 4, 4, 6, 7, 9, 9, 7, 6, 4,
			4, 4, 6, 7, 9, 9, 7, 6, 4, 4,
			4, 6, 7, 9, 9, 8, 6, 6, 6, 6,
			6, 8, 9, 10, 9, 8, 7, 7, 7, 7,
			8, 10, 11, 10, 9, 9, 9, 9, 9, 10,
			11
		};
		codes7 = new int[64]
		{
			0, 5, 55, 116, 242, 491, 1005, 2039, 4, 12,
			53, 113, 236, 238, 494, 501, 54, 52, 114, 234,
			241, 489, 499, 1013, 115, 112, 235, 240, 497, 496,
			1004, 1018, 243, 237, 488, 495, 1007, 1009, 1017, 2043,
			493, 239, 490, 498, 1011, 1016, 2041, 2044, 1006, 492,
			500, 1012, 1015, 2040, 4093, 4094, 2038, 1008, 1010, 1014,
			2042, 2045, 4092, 4095
		};
		bits7 = new int[64]
		{
			1, 3, 6, 7, 8, 9, 10, 11, 3, 4,
			6, 7, 8, 8, 9, 9, 6, 6, 7, 8,
			8, 9, 9, 10, 7, 7, 8, 8, 9, 9,
			10, 10, 8, 8, 9, 9, 10, 10, 10, 11,
			9, 8, 9, 9, 10, 10, 11, 11, 10, 9,
			9, 10, 10, 11, 12, 12, 11, 10, 10, 10,
			11, 11, 12, 12
		};
		codes8 = new int[64]
		{
			14, 5, 16, 48, 111, 241, 506, 1022, 3, 0,
			4, 18, 44, 106, 117, 248, 15, 2, 6, 20,
			46, 105, 114, 245, 47, 17, 19, 42, 50, 108,
			236, 250, 113, 43, 45, 49, 109, 112, 242, 505,
			239, 104, 51, 107, 110, 238, 249, 1020, 504, 116,
			115, 237, 240, 246, 502, 509, 1021, 243, 244, 247,
			503, 507, 508, 1023
		};
		bits8 = new int[64]
		{
			5, 4, 5, 6, 7, 8, 9, 10, 4, 3,
			4, 5, 6, 7, 7, 8, 5, 4, 4, 5,
			6, 7, 7, 8, 6, 5, 5, 6, 6, 7,
			8, 8, 7, 6, 6, 6, 7, 7, 8, 9,
			8, 7, 6, 7, 7, 8, 8, 10, 9, 7,
			7, 8, 8, 8, 9, 9, 10, 8, 8, 8,
			9, 9, 9, 10
		};
		codes9 = new int[169]
		{
			0, 5, 55, 231, 478, 974, 985, 1992, 1997, 4040,
			4061, 8164, 8172, 4, 12, 53, 114, 234, 237, 482,
			977, 979, 992, 2008, 4047, 4053, 54, 52, 113, 232,
			236, 481, 975, 989, 987, 2000, 4039, 4052, 4068, 230,
			112, 233, 477, 483, 978, 988, 1996, 1994, 2014, 4056,
			4074, 8155, 479, 235, 476, 486, 981, 990, 1995, 2013,
			2012, 4045, 4066, 4071, 8161, 976, 480, 484, 982, 1989,
			2001, 2011, 4050, 2016, 4057, 4075, 8163, 8169, 1988, 485,
			983, 1990, 1999, 2010, 4043, 4058, 4067, 4073, 8166, 8179,
			8183, 2003, 984, 993, 2004, 2009, 4051, 4062, 8157, 8153,
			8162, 8170, 8177, 8182, 2002, 980, 986, 1991, 2007, 2018,
			4046, 4059, 8152, 8174, 16368, 8180, 16370, 2017, 991, 1993,
			2006, 4042, 4048, 4069, 4070, 8171, 8175, 16371, 16372, 16373,
			4064, 1998, 2005, 4038, 4049, 4065, 8160, 8168, 8176, 16369,
			16376, 16374, 32764, 4072, 2015, 4041, 4055, 4060, 8156, 8159,
			8173, 8181, 16377, 16379, 32765, 32766, 8167, 4044, 4054, 4063,
			8158, 8154, 8165, 8178, 16378, 16375, 16380, 16381, 32767
		};
		bits9 = new int[169]
		{
			1, 3, 6, 8, 9, 10, 10, 11, 11, 12,
			12, 13, 13, 3, 4, 6, 7, 8, 8, 9,
			10, 10, 10, 11, 12, 12, 6, 6, 7, 8,
			8, 9, 10, 10, 10, 11, 12, 12, 12, 8,
			7, 8, 9, 9, 10, 10, 11, 11, 11, 12,
			12, 13, 9, 8, 9, 9, 10, 10, 11, 11,
			11, 12, 12, 12, 13, 10, 9, 9, 10, 11,
			11, 11, 12, 11, 12, 12, 13, 13, 11, 9,
			10, 11, 11, 11, 12, 12, 12, 12, 13, 13,
			13, 11, 10, 10, 11, 11, 12, 12, 13, 13,
			13, 13, 13, 13, 11, 10, 10, 11, 11, 11,
			12, 12, 13, 13, 14, 13, 14, 11, 10, 11,
			11, 12, 12, 12, 12, 13, 13, 14, 14, 14,
			12, 11, 11, 12, 12, 12, 13, 13, 13, 14,
			14, 14, 15, 12, 11, 12, 12, 12, 13, 13,
			13, 13, 14, 14, 15, 15, 13, 12, 12, 12,
			13, 13, 13, 13, 14, 14, 14, 14, 15
		};
		codes10 = new int[169]
		{
			34, 8, 29, 38, 95, 211, 463, 976, 983, 1005,
			2032, 2038, 4093, 7, 0, 1, 9, 32, 84, 96,
			213, 220, 468, 973, 990, 2023, 28, 2, 6, 12,
			30, 40, 91, 205, 217, 462, 476, 985, 1009, 37,
			11, 10, 13, 36, 87, 97, 204, 221, 460, 478,
			979, 999, 93, 33, 31, 35, 39, 89, 100, 216,
			223, 466, 482, 989, 1006, 209, 85, 41, 86, 88,
			98, 206, 224, 226, 474, 980, 995, 2027, 457, 94,
			90, 92, 99, 202, 218, 455, 458, 480, 987, 1000,
			2028, 483, 210, 203, 208, 215, 219, 454, 469, 472,
			970, 986, 2026, 2033, 481, 212, 207, 214, 222, 225,
			464, 470, 977, 981, 1010, 2030, 2043, 1001, 461, 456,
			459, 465, 471, 479, 975, 992, 1007, 2022, 2040, 4090,
			1003, 477, 467, 473, 475, 978, 972, 988, 1002, 2029,
			2035, 2041, 4089, 2034, 974, 484, 971, 984, 982, 994,
			997, 2024, 2036, 2037, 2039, 4091, 2042, 1004, 991, 993,
			996, 998, 1008, 2025, 2031, 4088, 4094, 4092, 4095
		};
		bits10 = new int[169]
		{
			6, 5, 6, 6, 7, 8, 9, 10, 10, 10,
			11, 11, 12, 5, 4, 4, 5, 6, 7, 7,
			8, 8, 9, 10, 10, 11, 6, 4, 5, 5,
			6, 6, 7, 8, 8, 9, 9, 10, 10, 6,
			5, 5, 5, 6, 7, 7, 8, 8, 9, 9,
			10, 10, 7, 6, 6, 6, 6, 7, 7, 8,
			8, 9, 9, 10, 10, 8, 7, 6, 7, 7,
			7, 8, 8, 8, 9, 10, 10, 11, 9, 7,
			7, 7, 7, 8, 8, 9, 9, 9, 10, 10,
			11, 9, 8, 8, 8, 8, 8, 9, 9, 9,
			10, 10, 11, 11, 9, 8, 8, 8, 8, 8,
			9, 9, 10, 10, 10, 11, 11, 10, 9, 9,
			9, 9, 9, 9, 10, 10, 10, 11, 11, 12,
			10, 9, 9, 9, 9, 10, 10, 10, 10, 11,
			11, 11, 12, 11, 10, 9, 10, 10, 10, 10,
			10, 11, 11, 11, 11, 12, 11, 10, 10, 10,
			10, 10, 10, 11, 11, 12, 12, 12, 12
		};
		codes11 = new int[289]
		{
			0, 6, 25, 61, 156, 198, 423, 912, 962, 991,
			2022, 2035, 4091, 2028, 4090, 4094, 910, 5, 1, 8,
			20, 55, 66, 146, 175, 401, 421, 437, 926, 960,
			930, 973, 2006, 174, 23, 7, 9, 24, 57, 64,
			142, 163, 184, 409, 428, 449, 945, 918, 958, 970,
			157, 60, 21, 22, 26, 59, 68, 145, 165, 190,
			406, 430, 441, 929, 913, 933, 981, 148, 154, 54,
			56, 58, 65, 140, 155, 176, 195, 414, 427, 444,
			927, 911, 937, 975, 147, 191, 62, 63, 67, 69,
			158, 167, 185, 404, 418, 442, 451, 934, 935, 955,
			980, 159, 416, 143, 141, 144, 152, 166, 182, 196,
			415, 431, 447, 921, 959, 948, 969, 999, 168, 438,
			171, 164, 170, 178, 194, 197, 408, 420, 440, 908,
			932, 964, 966, 989, 1000, 173, 943, 402, 189, 188,
			398, 407, 410, 419, 433, 909, 920, 951, 979, 977,
			987, 2013, 180, 990, 425, 411, 412, 417, 426, 429,
			435, 907, 946, 952, 974, 993, 992, 2002, 2021, 183,
			2019, 443, 424, 422, 432, 434, 439, 923, 922, 954,
			949, 982, 2007, 996, 2008, 2026, 186, 2024, 928, 445,
			436, 906, 452, 914, 938, 944, 956, 983, 2004, 2012,
			2011, 2005, 2032, 193, 2043, 968, 931, 917, 925, 940,
			942, 965, 984, 994, 998, 2020, 2023, 2016, 2025, 2039,
			400, 2034, 915, 446, 448, 916, 919, 941, 963, 961,
			978, 2010, 2009, 2015, 2027, 2036, 2042, 405, 2040, 957,
			924, 939, 936, 947, 953, 976, 995, 997, 2018, 2014,
			2029, 2033, 2041, 2044, 403, 4093, 988, 950, 967, 972,
			971, 985, 986, 2003, 2017, 2030, 2031, 2037, 2038, 4092,
			4095, 413, 450, 181, 161, 150, 151, 149, 153, 160,
			162, 172, 169, 177, 179, 187, 192, 399, 4
		};
		bits11 = new int[289]
		{
			4, 5, 6, 7, 8, 8, 9, 10, 10, 10,
			11, 11, 12, 11, 12, 12, 10, 5, 4, 5,
			6, 7, 7, 8, 8, 9, 9, 9, 10, 10,
			10, 10, 11, 8, 6, 5, 5, 6, 7, 7,
			8, 8, 8, 9, 9, 9, 10, 10, 10, 10,
			8, 7, 6, 6, 6, 7, 7, 8, 8, 8,
			9, 9, 9, 10, 10, 10, 10, 8, 8, 7,
			7, 7, 7, 8, 8, 8, 8, 9, 9, 9,
			10, 10, 10, 10, 8, 8, 7, 7, 7, 7,
			8, 8, 8, 9, 9, 9, 9, 10, 10, 10,
			10, 8, 9, 8, 8, 8, 8, 8, 8, 8,
			9, 9, 9, 10, 10, 10, 10, 10, 8, 9,
			8, 8, 8, 8, 8, 8, 9, 9, 9, 10,
			10, 10, 10, 10, 10, 8, 10, 9, 8, 8,
			9, 9, 9, 9, 9, 10, 10, 10, 10, 10,
			10, 11, 8, 10, 9, 9, 9, 9, 9, 9,
			9, 10, 10, 10, 10, 10, 10, 11, 11, 8,
			11, 9, 9, 9, 9, 9, 9, 10, 10, 10,
			10, 10, 11, 10, 11, 11, 8, 11, 10, 9,
			9, 10, 9, 10, 10, 10, 10, 10, 11, 11,
			11, 11, 11, 8, 11, 10, 10, 10, 10, 10,
			10, 10, 10, 10, 10, 11, 11, 11, 11, 11,
			9, 11, 10, 9, 9, 10, 10, 10, 10, 10,
			10, 11, 11, 11, 11, 11, 11, 9, 11, 10,
			10, 10, 10, 10, 10, 10, 10, 10, 11, 11,
			11, 11, 11, 11, 9, 12, 10, 10, 10, 10,
			10, 10, 10, 11, 11, 11, 11, 11, 11, 12,
			12, 9, 9, 8, 8, 8, 8, 8, 8, 8,
			8, 8, 8, 8, 8, 8, 8, 9, 5
		};
		ff_aac_scalefactor_code = new int[121]
		{
			262120, 262118, 262119, 262117, 524277, 524273, 524269, 524278, 524270, 524271,
			524272, 524284, 524285, 524287, 524286, 524279, 524280, 524283, 524281, 262116,
			524282, 262115, 131055, 131056, 65525, 131054, 65522, 65523, 65524, 65521,
			32758, 32759, 16377, 16373, 16375, 16371, 16374, 16370, 8183, 8181,
			4089, 4087, 4086, 2041, 4084, 2040, 1017, 1015, 1013, 504,
			503, 250, 248, 246, 121, 58, 56, 26, 11, 4,
			0, 10, 12, 27, 57, 59, 120, 122, 247, 249,
			502, 505, 1012, 1014, 1016, 2037, 2036, 2038, 2039, 4085,
			4088, 8180, 8182, 8184, 16376, 16372, 65520, 32756, 65526, 32757,
			262114, 524249, 524250, 524251, 524252, 524253, 524254, 524248, 524242, 524243,
			524244, 524245, 524246, 524274, 524255, 524263, 524264, 524265, 524266, 524267,
			524262, 524256, 524257, 524258, 524259, 524260, 524261, 524247, 524268, 524276,
			524275
		};
		ff_aac_scalefactor_bits = new int[121]
		{
			18, 18, 18, 18, 19, 19, 19, 19, 19, 19,
			19, 19, 19, 19, 19, 19, 19, 19, 19, 18,
			19, 18, 17, 17, 16, 17, 16, 16, 16, 16,
			15, 15, 14, 14, 14, 14, 14, 14, 13, 13,
			12, 12, 12, 11, 12, 11, 10, 10, 10, 9,
			9, 8, 8, 8, 7, 6, 6, 5, 4, 3,
			1, 4, 4, 5, 6, 6, 7, 7, 8, 8,
			9, 9, 10, 10, 10, 11, 11, 11, 11, 12,
			12, 13, 13, 13, 14, 14, 16, 15, 16, 15,
			18, 19, 19, 19, 19, 19, 19, 19, 19, 19,
			19, 19, 19, 19, 19, 19, 19, 19, 19, 19,
			19, 19, 19, 19, 19, 19, 19, 19, 19, 19,
			19
		};
		maxSfbTab = new int[13]
		{
			33, 33, 38, 40, 40, 40, 41, 41, 37, 37,
			37, 34, 34
		};
		ltpCoefTab = new float[8] { 0.570829f, 0.696616f, 0.813004f, 0.911304f, 0.9849f, 1.067894f, 1.194601f, 1.369533f };
		ff_aac_num_swb_1024 = new int[13]
		{
			41, 41, 47, 49, 49, 51, 47, 47, 43, 43,
			43, 40, 40
		};
		ff_aac_num_swb_128 = new int[13]
		{
			12, 12, 12, 14, 14, 14, 15, 15, 15, 15,
			15, 15, 15
		};
		swb_offset_1024_96 = new int[42]
		{
			0, 4, 8, 12, 16, 20, 24, 28, 32, 36,
			40, 44, 48, 52, 56, 64, 72, 80, 88, 96,
			108, 120, 132, 144, 156, 172, 188, 212, 240, 276,
			320, 384, 448, 512, 576, 640, 704, 768, 832, 896,
			960, 1024
		};
		swb_offset_128_96 = new int[13]
		{
			0, 4, 8, 12, 16, 20, 24, 32, 40, 48,
			64, 92, 128
		};
		swb_offset_1024_64 = new int[48]
		{
			0, 4, 8, 12, 16, 20, 24, 28, 32, 36,
			40, 44, 48, 52, 56, 64, 72, 80, 88, 100,
			112, 124, 140, 156, 172, 192, 216, 240, 268, 304,
			344, 384, 424, 464, 504, 544, 584, 624, 664, 704,
			744, 784, 824, 864, 904, 944, 984, 1024
		};
		swb_offset_1024_48 = new int[50]
		{
			0, 4, 8, 12, 16, 20, 24, 28, 32, 36,
			40, 48, 56, 64, 72, 80, 88, 96, 108, 120,
			132, 144, 160, 176, 196, 216, 240, 264, 292, 320,
			352, 384, 416, 448, 480, 512, 544, 576, 608, 640,
			672, 704, 736, 768, 800, 832, 864, 896, 928, 1024
		};
		swb_offset_128_48 = new int[15]
		{
			0, 4, 8, 12, 16, 20, 28, 36, 44, 56,
			68, 80, 96, 112, 128
		};
		swb_offset_1024_32 = new int[52]
		{
			0, 4, 8, 12, 16, 20, 24, 28, 32, 36,
			40, 48, 56, 64, 72, 80, 88, 96, 108, 120,
			132, 144, 160, 176, 196, 216, 240, 264, 292, 320,
			352, 384, 416, 448, 480, 512, 544, 576, 608, 640,
			672, 704, 736, 768, 800, 832, 864, 896, 928, 960,
			992, 1024
		};
		swb_offset_1024_24 = new int[48]
		{
			0, 4, 8, 12, 16, 20, 24, 28, 32, 36,
			40, 44, 52, 60, 68, 76, 84, 92, 100, 108,
			116, 124, 136, 148, 160, 172, 188, 204, 220, 240,
			260, 284, 308, 336, 364, 396, 432, 468, 508, 552,
			600, 652, 704, 768, 832, 896, 960, 1024
		};
		swb_offset_128_24 = new int[16]
		{
			0, 4, 8, 12, 16, 20, 24, 28, 36, 44,
			52, 64, 76, 92, 108, 128
		};
		swb_offset_1024_16 = new int[44]
		{
			0, 8, 16, 24, 32, 40, 48, 56, 64, 72,
			80, 88, 100, 112, 124, 136, 148, 160, 172, 184,
			196, 212, 228, 244, 260, 280, 300, 320, 344, 368,
			396, 424, 456, 492, 532, 572, 616, 664, 716, 772,
			832, 896, 960, 1024
		};
		swb_offset_128_16 = new int[16]
		{
			0, 4, 8, 12, 16, 20, 24, 28, 32, 40,
			48, 60, 72, 88, 108, 128
		};
		swb_offset_1024_8 = new int[41]
		{
			0, 12, 24, 36, 48, 60, 72, 84, 96, 108,
			120, 132, 144, 156, 172, 188, 204, 220, 236, 252,
			268, 288, 308, 328, 348, 372, 396, 420, 448, 476,
			508, 544, 580, 620, 664, 712, 764, 820, 880, 944,
			1024
		};
		swb_offset_128_8 = new int[16]
		{
			0, 4, 8, 12, 16, 20, 24, 28, 36, 44,
			52, 60, 72, 88, 108, 128
		};
		ff_swb_offset_1024 = new int[13][]
		{
			swb_offset_1024_96, swb_offset_1024_96, swb_offset_1024_64, swb_offset_1024_48, swb_offset_1024_48, swb_offset_1024_32, swb_offset_1024_24, swb_offset_1024_24, swb_offset_1024_16, swb_offset_1024_16,
			swb_offset_1024_16, swb_offset_1024_8, swb_offset_1024_8
		};
		ff_swb_offset_128 = new int[13][]
		{
			swb_offset_128_96, swb_offset_128_96, swb_offset_128_96, swb_offset_128_48, swb_offset_128_48, swb_offset_128_48, swb_offset_128_24, swb_offset_128_24, swb_offset_128_16, swb_offset_128_16,
			swb_offset_128_16, swb_offset_128_8, swb_offset_128_8
		};
		tns_tmp2_map_1_3 = new float[4] { 0f, -0.433883727f, 0.6427876f, 0.342020154f };
		tns_tmp2_map_0_3 = new float[8] { 0f, -0.433883727f, -0.7818315f, -0.9749279f, 0.9848077f, 0.8660254f, 0.6427876f, 0.342020154f };
		tns_tmp2_map_1_4 = new float[8] { 0f, -0.2079117f, -0.406736642f, -0.587785244f, 0.6736956f, 0.526432157f, 0.361241668f, 0.183749512f };
		tns_tmp2_map_0_4 = new float[16]
		{
			0f, -0.2079117f, -0.406736642f, -0.587785244f, -0.7431448f, -0.8660254f, -0.95105654f, -0.9945219f, 0.995734155f, 0.9618256f,
			0.8951633f, 0.7980172f, 0.6736956f, 0.526432157f, 0.361241668f, 0.183749512f
		};
		tns_tmp2_map = new float[4][] { tns_tmp2_map_0_3, tns_tmp2_map_0_4, tns_tmp2_map_1_3, tns_tmp2_map_1_4 };
		codebook_vector0_vals = new float[3] { -1f, 0f, 1f };
		codebook_vector02_idx = new int[81]
		{
			0, 33088, 33152, 16656, 49744, 49808, 16672, 49760, 49824, 8452,
			41540, 41604, 25108, 58196, 58260, 25124, 58212, 58276, 8456, 41544,
			41608, 25112, 58200, 58264, 25128, 58216, 58280, 4353, 37441, 37505,
			21009, 54097, 54161, 21025, 54113, 54177, 12805, 45893, 45957, 29461,
			62549, 62613, 29477, 62565, 62629, 12809, 45897, 45961, 29465, 62553,
			62617, 29481, 62569, 62633, 4354, 37442, 37506, 21010, 54098, 54162,
			21026, 54114, 54178, 12806, 45894, 45958, 29462, 62550, 62614, 29478,
			62566, 62630, 12810, 45898, 45962, 29466, 62554, 62618, 29482, 62570,
			62634
		};
		codebook_vector4_vals = new float[9] { -6.349604f, -4.326749f, -2.51984215f, -1f, 0f, 1f, 2.51984215f, 4.326749f, 6.349604f };
		codebook_vector4_idx = new int[81]
		{
			0, 16, 32, 48, 64, 80, 96, 112, 128, 1,
			17, 33, 49, 65, 81, 97, 113, 129, 2, 18,
			34, 50, 66, 82, 98, 114, 130, 3, 19, 35,
			51, 67, 83, 99, 115, 131, 4, 20, 36, 52,
			68, 84, 100, 116, 132, 5, 21, 37, 53, 69,
			85, 101, 117, 133, 6, 22, 38, 54, 70, 86,
			102, 118, 134, 7, 23, 39, 55, 71, 87, 103,
			119, 135, 8, 24, 40, 56, 72, 88, 104, 120,
			136
		};
		codebook_vector6_idx = new int[64]
		{
			0, 272, 288, 304, 320, 336, 352, 368, 4353, 529,
			545, 561, 577, 593, 609, 625, 4354, 530, 546, 562,
			578, 594, 610, 626, 4355, 531, 547, 563, 579, 595,
			611, 627, 4356, 532, 548, 564, 580, 596, 612, 628,
			4357, 533, 549, 565, 581, 597, 613, 629, 4358, 534,
			550, 566, 582, 598, 614, 630, 4359, 535, 551, 567,
			583, 599, 615, 631
		};
		codebook_vector8_idx = new int[169]
		{
			0, 272, 288, 304, 320, 336, 352, 368, 384, 400,
			416, 432, 448, 4353, 529, 545, 561, 577, 593, 609,
			625, 641, 657, 673, 689, 705, 4354, 530, 546, 562,
			578, 594, 610, 626, 642, 658, 674, 690, 706, 4355,
			531, 547, 563, 579, 595, 611, 627, 643, 659, 675,
			691, 707, 4356, 532, 548, 564, 580, 596, 612, 628,
			644, 660, 676, 692, 708, 4357, 533, 549, 565, 581,
			597, 613, 629, 645, 661, 677, 693, 709, 4358, 534,
			550, 566, 582, 598, 614, 630, 646, 662, 678, 694,
			710, 4359, 535, 551, 567, 583, 599, 615, 631, 647,
			663, 679, 695, 711, 4360, 536, 552, 568, 584, 600,
			616, 632, 648, 664, 680, 696, 712, 4361, 537, 553,
			569, 585, 601, 617, 633, 649, 665, 681, 697, 713,
			4362, 538, 554, 570, 586, 602, 618, 634, 650, 666,
			682, 698, 714, 4363, 539, 555, 571, 587, 603, 619,
			635, 651, 667, 683, 699, 715, 4364, 540, 556, 572,
			588, 604, 620, 636, 652, 668, 684, 700, 716
		};
		codebook_vector10_vals = new float[16]
		{
			0f, 1f, 2.51984215f, 4.326749f, 6.349604f, 8.54988f, 10.9027233f, 13.3905182f, 16f, 18.7207546f,
			21.5443478f, 24.4637814f, 27.4731426f, 30.56735f, 33.741993f, 36.99318f
		};
		codebook_vector10_idx = new int[289]
		{
			0, 4112, 4128, 4144, 4160, 4176, 4192, 4208, 4224, 4240,
			4256, 4272, 4288, 4304, 4320, 4336, 4608, 4097, 8209, 8225,
			8241, 8257, 8273, 8289, 8305, 8321, 8337, 8353, 8369, 8385,
			8401, 8417, 8433, 8705, 4098, 8210, 8226, 8242, 8258, 8274,
			8290, 8306, 8322, 8338, 8354, 8370, 8386, 8402, 8418, 8434,
			8706, 4099, 8211, 8227, 8243, 8259, 8275, 8291, 8307, 8323,
			8339, 8355, 8371, 8387, 8403, 8419, 8435, 8707, 4100, 8212,
			8228, 8244, 8260, 8276, 8292, 8308, 8324, 8340, 8356, 8372,
			8388, 8404, 8420, 8436, 8708, 4101, 8213, 8229, 8245, 8261,
			8277, 8293, 8309, 8325, 8341, 8357, 8373, 8389, 8405, 8421,
			8437, 8709, 4102, 8214, 8230, 8246, 8262, 8278, 8294, 8310,
			8326, 8342, 8358, 8374, 8390, 8406, 8422, 8438, 8710, 4103,
			8215, 8231, 8247, 8263, 8279, 8295, 8311, 8327, 8343, 8359,
			8375, 8391, 8407, 8423, 8439, 8711, 4104, 8216, 8232, 8248,
			8264, 8280, 8296, 8312, 8328, 8344, 8360, 8376, 8392, 8408,
			8424, 8440, 8712, 4105, 8217, 8233, 8249, 8265, 8281, 8297,
			8313, 8329, 8345, 8361, 8377, 8393, 8409, 8425, 8441, 8713,
			4106, 8218, 8234, 8250, 8266, 8282, 8298, 8314, 8330, 8346,
			8362, 8378, 8394, 8410, 8426, 8442, 8714, 4107, 8219, 8235,
			8251, 8267, 8283, 8299, 8315, 8331, 8347, 8363, 8379, 8395,
			8411, 8427, 8443, 8715, 4108, 8220, 8236, 8252, 8268, 8284,
			8300, 8316, 8332, 8348, 8364, 8380, 8396, 8412, 8428, 8444,
			8716, 4109, 8221, 8237, 8253, 8269, 8285, 8301, 8317, 8333,
			8349, 8365, 8381, 8397, 8413, 8429, 8445, 8717, 4110, 8222,
			8238, 8254, 8270, 8286, 8302, 8318, 8334, 8350, 8366, 8382,
			8398, 8414, 8430, 8446, 8718, 4111, 8223, 8239, 8255, 8271,
			8287, 8303, 8319, 8335, 8351, 8367, 8383, 8399, 8415, 8431,
			8447, 8719, 4352, 8464, 8480, 8496, 8512, 8528, 8544, 8560,
			8576, 8592, 8608, 8624, 8640, 8656, 8672, 8688, 8960
		};
	}
}
